module PRNG (
   input logic A,
   input logic clk1,
   input logic clk2,
   output logic [11:0] y
);

  logic[4:0] a, b;
  logic[7:0]x;
  logic[4:0] counter1,counter2;
  

  assign x = 8'b10101110;

/* always_ff @(posedge clk)
  begin
    clk1 <= clk1 + 1;
    if (clk1[15] == 1) clk1 <= 0;
  end

  always_ff @(posedge clk)
  begin
    clk2 <= clk2 + 1;
    if (clk2[9] == 1) clk2 <= 0;
  end*/

  always_ff @(posedge clk1)
  begin
    if (counter1 < 10)
      counter1 <= counter1 + 1;
    else
      counter1 <= 0;
  end

  always_ff @(posedge clk2)
  begin
    if (counter2 < 10)
      counter2 <= counter2 + 1;
    else
      counter2 <= 0;
  end

  always_ff @(posedge A)
  begin
    a <= counter1;
    b <= counter2;
    y<= (a * x + b)%4096;
  end

endmodule

//*** for fpga implementation uncomment the commented block and change the "always_ff@(posedge clk1)" and "always_ff@(posedge clk2)" to "always_ff@(posedge clk1[15])" and "always_ff@(posedge clk2[9])"
